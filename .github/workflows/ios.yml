name: iOS LMS Workflow

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Build and Test using Xcode 16.2 and iPhone simulator
    runs-on: macos-14

    steps:
      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore .env file
        run: |
          echo "$ENV_FILE_CONTENT_BASE64" | base64 --decode > .env
        env:
          ENV_FILE_CONTENT_BASE64: ${{ secrets.ENV_FILE_CONTENT_BASE64 }}

      - name: Restore GoogleService-Info.plist
        run: |
          mkdir -p lms
          echo "$GOOGLE_SERVICE_INFO_PLIST_BASE64" | base64 --decode > lms/GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO_PLIST_BASE64: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}
     
      - name: Build
        env:
          scheme: lms
          platform: iOS Simulator
        run: |
          device="iPhone 16 Pro"
          if [ "$(ls -A | grep -i \.xcworkspace$)" ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i \.xcworkspace$)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i \.xcodeproj$)
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: lms
          platform: iOS Simulator
        run: |
          device="iPhone 16 Pro"
          if [ "$(ls -A | grep -i \.xcworkspace$)" ]; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -i \.xcworkspace$)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -i \.xcodeproj$)
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
